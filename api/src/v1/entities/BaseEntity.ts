import { Column, BeforeInsert, BeforeUpdate, PrimaryGeneratedColumn } from "typeorm";import { Field, ID, ObjectType } from 'type-graphql';const crypto = require('crypto');/** * The BaseEntity Entity, extend this abstract class to define common fields */@ObjectType()export abstract class BaseEntity{    @Field(() => ID)    @PrimaryGeneratedColumn()    id!: number;    @Field(() => String)    @Column({ type: 'bigint', nullable: false, name: 'created_at' })    createdAt!: number;    @Field(() => String)    @Column({ type: 'bigint', nullable: false, name: 'updated_at' })    updatedAt!: number;    @BeforeInsert()    setCreatedAt()    {        this.createdAt = Date.now();        this.updatedAt = this.createdAt;    }    @BeforeUpdate()    setUpdatedAt()    {        this.updatedAt = Date.now();    }}