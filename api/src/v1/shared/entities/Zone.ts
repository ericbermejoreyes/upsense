import { Entity, Column, ManyToOne, OneToMany, ManyToMany } from 'typeorm';import { BaseEntity } from './BaseEntity';import { Branch } from './Branch';import { User } from './User';import { Hub } from './Hub';import { NotificationSetting } from './NotificationSetting';@Entity({ name: 'zones' })export class Zone extends BaseEntity{    @Column({ type: 'text', nullable: false, default: '' })    name!: string;    @ManyToMany(() => User, admin => admin.zones, { cascade: ['insert', 'update' ]})    admins!: User[];    @ManyToOne(() => Branch, branch => branch.zones, { onDelete: 'CASCADE'})    branch!: Branch;    @OneToMany(() => Hub, hub => hub.zone)    hubs!: Hub[];    @OneToMany(() => NotificationSetting, notificationSetting => notificationSetting.zone)    notificationSettings!: NotificationSetting[];}