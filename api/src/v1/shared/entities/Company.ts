import {Entity, Column, JoinColumn, OneToOne} from 'typeorm';import { ObjectType, Field } from 'type-graphql';import { BaseEntity } from './BaseEntity';import { Branch } from './Branch';@ObjectType()@Entity({ name: 'companies' })export class Company extends BaseEntity{    @Field(() => String)    @Column({ type: 'text', nullable: false, default: '', unique: true })    name!: string;    @OneToOne(() => Branch, branch => branch.company, { onDelete: 'RESTRICT' })    @JoinColumn({name: 'branch_id'})    branch!: Branch;}