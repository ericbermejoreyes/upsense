# For more information: https://laravel.com/docs/sail
version: '3'
services:
    laravel.test:
        build:
            context: ./docker/8.0
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: sail-8.0/app
        ports:
            - '${APP_PORT:-80}:80'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            - mysql
            # - pgsql
            - redis
            # - selenium
    # selenium:
    #     image: 'selenium/standalone-chrome'
    #     volumes:
    #         - '/dev/shm:/dev/shm'
    #     networks:
    #         - sail
    mysql:
        image: 'mysql:8.0'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
        volumes:
            - 'sailmysql:/var/lib/mysql'
        networks:
            - sail
        healthcheck:
          test: ["CMD", "mysqladmin", "ping"]
#    pgsql:
#        image: postgres:13
#        ports:
#            - '${FORWARD_DB_PORT:-5432}:5432'
#        environment:
#            PGPASSWORD: '${DB_PASSWORD:-secret}'
#            POSTGRES_DB: '${DB_DATABASE}'
#            POSTGRES_USER: '${DB_USERNAME}'
#            POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
#        volumes:
#            - 'sailpostgresql:/var/lib/postgresql/data'
#        networks:
#            - sail
#        healthcheck:
#          test: ["CMD", "pg_isready", "-q", "-d", "${DB_DATABASE}", "-U", "${DB_USERNAME}"]
    redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'sailredis:/data'
        networks:
            - sail
        healthcheck:
          test: ["CMD", "redis-cli", "ping"]
    # memcached:version: "3.9"
            #
            #services:
            #  mariadb:
            #    image: mariadb:10.5.8-focal
            #    ports:
            #      - 3306:3306
            #    environment:
            #      MYSQL_ROOT_PASSWORD: admin123
            #      MYSQL_DATABASE: upsense
            #    volumes:
            #      - ./mysql/default.sql:/docker-entrypoint-initdb.d/default.sql
            #    restart: unless-stopped
            #
            #  api:
            #    build:
            #      dockerfile: ./api/DockerfileDev
            #      context: ./
            #    image: upsense_api_dev:latest
            #    ports:
            #      - 8443:8443
            #    volumes: # Use this when in development
            #      - ./api:/var/www/api
            #    links:
            #      - mariadb:mysql
            #      - influxdb
            #      - broker
            #    restart: unless-stopped
            #
            #  influxdb:
            #    image: influxdb:1.8.3
            #    ports:
            #      - 8086:8086
            #    environment:
            #      INFLUXDB_HTTP_LOG_ENABLED: 0
            #    volumes:
            #      - ./influxdb/influxdb.conf:/etc/influxdb/influxdb.conf
            #      - ./influxdb/storage:/var/lib/influxdb
            #    restart: unless-stopped
            #
            #  broker:
            #    build:
            #      dockerfile: ./mqtt/DockerfileDev
            #      context: ./
            #    image: upsense_broker_dev:latest
            #    ports:
            #      - 1883:1883
            #      - 1884:1884
            #    volumes: # Use this when in development
            #      - ./mqtt:/var/www/mqtt_broker
            #    links:
          #      - influxdb
          #    restart: unless-stopped
    #     image: 'memcached:alpine'
    #     ports:
    #         - '11211:11211'
    #     networks:
    #         - sail
    mailhog:
        image: 'mailhog/mailhog:latest'
        ports:
            - '${FORWARD_MAILHOG_PORT:-1025}:1025'
            - '${FORWARD_MAILHOG_DASHBOARD_PORT:-8025}:8025'
        networks:
            - sail
networks:
    sail:
        driver: bridge
volumes:
    sailmysql:
        driver: local
#    sailpostgresql:
#        driver: local
    sailredis:
        driver: local
